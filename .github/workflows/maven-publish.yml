# Improved Workflow: Java CI with Maven, PlantUML Diagram Generation and WhatsApp Notification
# Este workflow compila el proyecto Java con Maven, genera y commitea diagramas PlantUML,
# y envía una notificación por WhatsApp utilizando la acción de Twilio.
# Se usa caché para evitar descargas redundantes, mejorando así el tiempo de ejecución.

permissions:
  contents: write  # Necesario para hacer push de los diagramas generados

name: Java CI with Maven & WhatsApp Notifier

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Permite ejecutar manualmente el workflow

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xmx1024m"  # Puedes ajustar según tus necesidades
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Cache PlantUML jar
        uses: actions/cache@v3
        id: cache-plantuml
        with:
          path: .cache/plantuml.jar
          key: ${{ runner.os }}-plantuml-1.2023.9
          restore-keys: |
            ${{ runner.os }}-plantuml-

      - name: Download PlantUML jar if not cached
        run: |
          mkdir -p .cache
          if [ ! -f .cache/plantuml.jar ]; then
            echo "Downloading PlantUML jar..."
            curl -L -o .cache/plantuml.jar https://github.com/plantuml/plantuml/releases/download/v1.2023.9/plantuml.jar
          else
            echo "PlantUML jar found in cache."
          fi

      - name: Build with Maven
        run: mvn -B package --file "parque-atracciones/pom.xml"

      - name: Generate PlantUML Diagrams
        run: |
          sudo apt-get update && sudo apt-get install -y graphviz
          mkdir -p "parque-atracciones/doc/diagrams/generated"
          for f in parque-atracciones/doc/diagrams/*.puml; do
            echo "Generating diagram for $f"
            java -jar .cache/plantuml.jar -tsvg "$f" -o generated
          done
          # Mueve los SVG generados a la ubicación deseada
          mv parque-atracciones/doc/diagrams/generated/*.svg parque-atracciones/doc/diagrams/generated/ 2>/dev/null || true

      - name: Commit and Push Generated Diagrams
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add parque-atracciones/doc/diagrams/generated/*.svg
          # Sólo commitea si existen cambios
          if ! git diff --cached --quiet; then
            git commit -m "Auto-generate PlantUML diagrams [skip ci]"
            git push
          else
            echo "No changes in diagrams to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.README_EDIT }}
